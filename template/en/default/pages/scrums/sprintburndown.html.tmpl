[%#
  # The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Ultimate Scrum Bugzilla Extension.
  #
  # The Initial Developer of the Original Code is "Nokia corporation"
  # Portions created by the Initial Developer are Copyright (C) 2011 the
  # Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Visa Korhonen <visa.korhonen@symbio.com>
  #%]

[% PROCESS global/header.html.tmpl
    title = "Sprint burndown"
     style_urls = 
['skins/standard/admin.css','extensions/Scrums/web/js/jquery/css/ui-lightness/jquery-ui-1.8.10.custom.css'] 
%]

<link rel="stylesheet" href="extensions/Scrums/web/css/scrums.css">

<script type="text/JavaScript" src="extensions/Scrums/web/js/jquery/js/jquery-1.4.4.min.js"></script>
<script language="javascript" type="text/javascript" src="extensions/Scrums/web/js/jquery.flot.js"></script>

<script type="text/javascript">
var rem = [[% FOREACH plot IN remaining_plot %][[% plot.0 %], [% plot.1 %]],[% END %]];
var work = [[% FOREACH plot IN worktime_plot %][[% plot.0 %], [% plot.1 %]],[% END %]];

var max_ts, min_ts, max_str, min_str;
</script>

<script type="text/javascript">

var options = {
    xaxis: { mode: "time", tickLength: 5 },
    selection: { mode: "x" }
};

$(function () {
    var ch = $("#testi_id");
    ch[0].checked = false;

    init();
});

function init()
{
/**
 * Flot library, which draws chart, will always show time scale in UTC. We do not want to
 * look at timescale in UTC. Because this can not be set into Flot library, we do a trick
 * in which we shift time data with timezone offset. Then we pretend, that time, which is
 * shown in UTC, is apparent server time.
 */
    var d = new Date();
    var tzo = -d.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds

    var i = 0;
    for(i = 0; i < rem.length; i++)
    {
	rem[i][0] = rem[i][0] + tzo;
    }
    for(i = 0; i < work.length; i++)
    {
	work[i][0] = work[i][0] + tzo;
    }

    max_ts = rem[0][0];
    min_ts = rem[rem.length-1][0];
    var max_date = new Date(max_ts);
    var min_date = new Date(min_ts);
    var max_y = max_date.getFullYear();
    var max_m = max_date.getMonth()+1;
    var max_d = max_date.getDate();
    if(max_m < 10)
        max_m = "0" + max_m;
    if(max_d < 10)
        max_d = "0" + max_d;
    max_str = max_y + "-" + max_m + "-" + max_d;

    var min_y = min_date.getFullYear();
    var min_m = min_date.getMonth()+1;
    var min_d = min_date.getDate();
    if(min_m < 10)
        min_m = "0" + min_m;
    if(min_d < 10)
        min_d = "0" + min_d;
    min_str = min_y + "-" + min_m + "-" + min_d;

    reset_range();
}

function reset_range()
{
    var e = $("#range_begin");
    e[0].value = min_str;

    e = $("#range_end");
    e[0].value = max_str;

    scale_chart();
    refresh();
}

function refresh()
{
    var ch = $("#testi_id");
    var work_selected = ch[0].checked;
    if(work_selected)
    {
    	$.plot($("#placeholder"), [ { label: "Remaining work", data: rem }, { label: "Total amount of work", data: work } ], options);
    }
    else
    {
    	$.plot($("#placeholder"), [ { label: "Remaining work", data: rem } ], options);
    }
}

function gettime() 
{
    var rb = $("#range_begin")[0];
    var re = $("#range_end")[0];

    var range_begin = make_time(rb.value);
    var range_end = make_time(re.value, true);

    if(range_begin > range_end)
    {
        alert('Start time is bigger than end time');
        return;
    }

    scale_chart(range_begin, range_end); 
    refresh();
}

function scale_chart(range_begin, range_end) 
{
    var min_value = min_ts;
    if(range_begin && range_begin > min_ts) 
    {
	 min_value = range_begin;
    }
    options.xaxis.min = min_value;

    var max_value = max_ts;
    if(range_end && range_end < max_ts) 
    {
	max_value = range_end;
    }
    options.xaxis.max = max_value;
}

function make_time(str_with_dashes, is_upper_limit) 
{
    var str_with_dots = "";
    var y, m, d;
    var str1 = str_with_dashes.match(/^(\d{4})-(\d{1,2})-(\d{1,2})/);
    if (str1) 
    {
        y = str1[1];
	m = str1[2];
	d = str1[3];
	if(y < 1970 || y > 2030 || m < 1 || m > 12 || d < 1 || d > 31)
	    return null;
	if(is_upper_limit)
	    d++;
        var date = new Date(y, m-1, d, 0, 0, 0, 0);
        date.setUTCHours(0);
	date.setUTCDate(d);
	date.setUTCMonth(m-1);
	return date.getTime()
    }
}
</script>

<div class="bz_title_container">
      Team '[% team_name %]' sprint '[% sprint_name %]'
</div>

<hr>

[% FOREACH plot IN chart_plot %]
[% FOREACH coord IN plot %]
[% coord %], 
[% END %]
<br>
[% END %]
</p>
    <div id="placeholder" style="width:800px;height:400px;"></div>
<input type="checkbox" id="testi_id" onclick="refresh();">
<label for="testi_id">Show total work amount</label>
</input>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Show days: <input type="edit" id="range_begin" size="8" onchange="gettime();"/>-<input type="edit" id="range_end" size="8" onchange="gettime();"/>
&nbsp;<button>Show</button onclick="gettime();">&nbsp;<button onclick="reset_range();">Reset</button>
<br><br>
<a href="page.cgi?id=scrums/createteam.html&teamid=[% team_id %]">back to team</a>
[% PROCESS global/footer.html.tmpl %]
