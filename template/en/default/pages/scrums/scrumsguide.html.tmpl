[%#
  # The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Scrums Bugzilla Extension.
  #
  # The Initial Developer of the Original Code is "Nokia Corporation"
  # Portions created by the Initial Developer are Copyright (C) 2011 the
  # Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Visa Korhonen <visa.korhonen@symbio.com>
  #%]
[% PROCESS "header-additional_header.html.tmpl" %]

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD

><style>
<!--
p { max-width: 1000px; }
-->
</style

><TITLE
>Scrums</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="HOME"
TITLE="The Scrums Bugzilla extension"
HREF="index.html"><LINK
REL="UP"
TITLE="Using Scrums"
HREF="scrumsguide.html"></HEAD
><BODY
CLASS="section"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>The Bugzilla Guide</TH
></TR
><TR
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Using Scrums-extension</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV

><H1
CLASS="section"
><A
NAME="scrumsextension"
>Scrums extension</A
></H1

><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT

><DT
>1. <A
HREF="#teamviewpoint"
>Team viewpoint</A>
</DT
><DD
><DL
><DT>
1.1. Purpose
</DT
><DT>
1.2. Team
</DT
><DT>
1.3. Adminitering teams
</DT
><DT>
1.4. <A
HREF="#teamplanning"
>Team's planning views</A
</DT
><DD
><DL
><DT>
Steps of planning
</DT
><DT>
Team product back-log planning
</DT
><DT>
Sprint planning
</DT
><DT>
Sprint burndown chart
</DT
><DT>
Archived sprints
</DT>
</DL

><DT>
1.5. <A
HREF="#dailytasks"
>Team's daily tasks</A
</DT
><DD
><DL
><DT>
Active sprint tasks
</DT
><DT>
Using InlineEditor-extension in combination of item list
</DT
><DT>
New bugs
</DT>

</DD>
</DL>

</DD>
</DL

><DT>

2. <A
HREF="#releaseviewpoint"
>Release viewpoint</A>
</DT
><DD
><DL
><DT>
2.1. Purpose
</DT
><DT>
2.2. Release
</DT
><DT>
2.3. Administering releases
</DT
><DT>
2.4. <A
HREF="#releaseplanning"
>Release planning view</A>
</DT>
</DL>
</DD
><DT>
3. <A
HREF="#permissionsettings"
>Permissions</A>
</DT>
</DL>
</DD>

</DIV

><hr
><DIV
CLASS="section"
><P
>&#13;    Scrums-extension allows you to have holistic view into items in Bugzilla.
Viewpoints are of two types, release and team.</P
><P>Scrums-extension has the purpose of supporting agile software development methods.</P
</DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="teamviewpoint"
>1. Team viewpoint</A
></H2
><H2
CLASS="section"
>1.1. Purpose
</H2
><P
>&#13;        This viewpoint allows you to look at items in Bugzilla from team point of view.
It supports planning activities of team.
      </P
><H2
CLASS="section"
>1.2. Team
</H2
><P>Team is a whole, that builds around components. Team has responsibility for one or several components.
Dedicating components to teams fixes also bugs and other items, that have been recorded to component, to team.
Bugzilla users can be nominated as members of teams.
</P
><H2
CLASS="section"
>1.3. Administering teams
</H2
><P>
Teams main page shows table of all teams. It is possible to create a new team in main page.
</P
><P>
Teams are shown as a table, which can be sorted by any of it's columns by clicking column header.
Clicking any individual team shows information of team.
</P
><P>
Team information page shows basic information of a team and also components, that team is responsible, and team members.
Any information can be edited in team information page. Team planning pages and pages for team daily activities can be selected from team information page.
There are two pages for daily activities:
</P
><UL
COMPACT="COMPACT"
><LI
><P
>&#13;            Active sprint tasks
          </P
></LI
><LI
><P
>&#13;            New bugs
          </P
></LI
></UL
><P>
There are four different planning pages for team:
</P
><UL
COMPACT="COMPACT"
><LI
><P
>&#13;            Sprint burn-down chart
          </P
></LI
><LI
><P
>&#13;            Sprint planning 
          </P
></LI
><LI
><P
>&#13;            Team product back-log
          </P
></LI
><LI
><P
>&#13;            Archived sprints
          </P
></LI
></UL
></DIV
><H2
CLASS="section"
><A
NAME="teamplanning"
>1.4. Team's planning views</A
</H2
><H3>Steps of planning</H3>
<p>
Any individual item weather it is bug or other item, can be in different states depending on plans, that team has.
Item can be, in Scrums point of view, in unplanned state, in backlog, in sprint plan or elapsed. 
Every item is forced into predefined path through different stages. This has purpose of enforcing product and team management.
Control of work flow is gained by dividing tasks into separate roles.<br>
<img src="extensions/Scrums/web/img/item-path.png" />
</p
<p>
Backlog for team is simple list of items, where items are in defined order.
Unplanned items are taken into backlog, whence they become planned<sup>1</sup>. Items in backlog can be sorted. 
Order of items is meant to represent relative priority of items.
</p
><p>
Items in backlog are taken into sprint, whence they become scheduled<sup>2</sup>. Each sprint has defined time schedule and
also items inside individual sprint can be ordered. 
</p
><p>
After sprint has ended it is archived<sup>3</sup>. 
It is notable, that item, which remains open, while sprint is archived, becomes unplanned once more.
</p
><H3>Team product back-log planning</H3
><P>
Team is assigned components, whence all tasks and but related to assigned components are fixed to team.
Set of components, that team is responsible, form virtual product, team product.
View for back-log planning consists of two lists of items. 'Unordered bugs'-list contains any open item, that belongs to team, but which
has not been taken into other lists. 'Backlog'-list contains items, that are in team product backlog, but which are not
scheduled in sprint. Taking items into backlog is managing product. Product means in here those components, that the team
in question has responsibility. Product backlog is common to any responsibilities, that team might have.
</P
><P>
Items are taken into backlog by dragging lines from one list to another. Order of items in backlog is saved. 
On the other hand order of items in unordered bugs-list is not saved. Items can be also moved in opposite direction
from backlog to unordered bugs. Order of items is changed by sorting with mouse. Item is selected with mouse and dragged into new position in list or other list. In the end item is dropped into new place by releasing.
</P
><H3>Sprint planning</H3
><P>
View consists of two lists of items. Sprint list contains all items in sprint. Shown sprint is currently active sprint, that
team has, since team can have only one active sprint simultaneously.
'Backlog'-list contains items, that are in product backlog, but which are not
scheduled in sprint. Items are in only one active list simultaneously.
</P
><P>
It is possible to edit sprint information. From sprint editing it is also possible to move sprint into archived state.
Archiving means ending sprint once and for all. Sprint is meant to last limited time. This is also enforced by allowing
only one active sprint simultaneously. While ending and archiving sprint end date must be given.
</P
><P>
Items are taken into sprint by dragging lines from one list to another. Order of items in sprint is also saved and
items can be sorted. 
Items can be also moved in opposite direction from sprint to backlog. 
Order of items is changed by sorting with mouse. Item is selected with mouse and dragged into new position in list or other list. In the end item is dropped into new place by releasing.
</P
><H3>Sprint burn-down chart</H3
><P>
Burn-down chart shows progress of sprint. Primary quantity, that is measured in burn-down chart is
<i>time remaining</i>. It is shown, so that it would be possible to make predictions about sprint into future.
Also the amount of total work in sprint can be shown. This feature is optional and it makes sense only when work hours have been recorded
into system during the sprint.
</P
><P>
Status summary pie charts and tables show number of open and closed items in sprint. Second pie chart shows more detailed, what status items
in sprint have.
</P
><H3>Archived sprints</H3
><P>
Archived sprints-view shows ended sprints of team. Sprints are shown in time order. Newest sprint is shown first.
</P

><H2
CLASS="section"
><A
NAME="dailytasks"
>1.5. Team's daily tasks</A
</H2

><H3>Active sprint tasks</H3
><P>
View consists of list of items. List contains all items in active sprint, that are currently open. As long as items are open,
they remain visible in list.
</P
><i
><H4>Using InlineEditor-extension in combination of item list</H4
><P>
InlineEditor is stand-alone extension. It is utility, that can be used in combination with Scrums-extension.
InlineEditor enhances Active sprint tasks-view. It makes each item in list editable, so that user does not need
to open each item individually, but can edit all items in list in same page.
</P
><P>
Fields, that are possible to edit in list with InlineEditor-extension, are bug_severity, priority, assigned_to, estimated_time and remaining_time. System administrator can choose, which fields are allowed to be edited in item list, by setting parameter inline_editor_bug_list_editable_fields. Only estimated_time is selected by default.
</P
><P>
Item field 'assigned to' is handled in a special way, when item is edited in list. If item is in state new, it's assignee is hidden and empty marking '--' is shown instead. Because item is in state new, it is considered unassigned and assignee is hidden. When user starts to edit field, he has only one choice to choose from. He can only assign item to himself. If new item has been assigned to user in first place, assignee is shown in new item. This behavior of 'assigned to' -fields requires, that field is editable in item list. If the field is not editable, assignee is shown also, when item is in state new.
</P
></i

><H3>New bugs</H3
><P>
View consists of two lists of items. Sprint list contains all items in sprint. Shown sprint is currently active sprint, that
team has, since team can have only one active sprint simultaneously.
</P
><P>
'Unordered bugs'-list contains any open bug, that belongs to team, but which has not been taken into other lists.
It is notable, that bugs are only items, that are visible in this list in daily planning page. Items, that are not bugs, do
not belong to daily planning. Purpose of unordered bugs in daily planning is, that team can pick bugs into
it's own work flow autonomously.
</P
><P>
Bugs are taken into sprint by dragging lines from one list to another. Order of items in sprint is also saved and
items can be sorted. 
Bugs can be also moved in opposite direction from sprint to unordered.
Order of items is changed by sorting with mouse. Item is selected with mouse and dragged into new position in list or other list. In the end item is dropped into new place by releasing.
</P



><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="releaseviewpoint"
>2. Release viewpoint</A
></H2
><H2
CLASS="section"
>2.1. Purpose
</H2
><P
>&#13;        This viewpoint allows you to look at items in Bugzilla from release point of view.
It supports planning content and priorities of a release.
      </P
><H2
CLASS="section"
>2.2. Release
</H2
><P>Release is a whole, that builds around collection of items. 
</P
><H2
CLASS="section"
>2.3. Administering releases
</H2
><P>
Releases main page shows table of all releases. It is possible to create a new release in main page.
Clicking any individual release shows information of release.
</P
><P>
Release information page shows basic information of a release and also flag types, that are marked into release.
Any information can be edited in release information page. Release planning page can be accessed from release information page.
</P

><H2
CLASS="section"
><A
NAME="releaseplanning"
>2.4. Release planning view</A
</H2
><P>
View consists of two lists of items. 'Unordered bugs'-list contains all items, that belong to release, but which
have not been taken into sorted list of items. 'Bug order'-list contains items, that have been sorted by priority in release.
</P
><P>
Bugs are taken into 'bug order' by dragging lines from one list to another. Order of items in 'bug order' is also saved and
items can be sorted. 
Bugs can be also moved in opposite direction from ordered to unordered. 
Order of items is changed by sorting with mouse. Item is selected with mouse and dragged into new position in list or other list. 
In the end item is dropped into new place by releasing.
</P
><P>
Release planning view provides link to teams with fields 'team' and 'sprint', that are shown for each item. Both fields are links to
respective entities in Scrums. If item has not been included into any sprint, sprint-field is empty. 
</P>
</DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="permissionsettings"
>3. Permissions</A
></H2
><P
>&#13;      This is a purely informative page which outlines your current
      permissions on Scrums extension.
</P
><P
>&#13;      A complete list of permissions is below. Only users with 
      <EM
>'editusers'</EM
> privileges can change the permissions 
      of other users.
      </P
><P
></P>
</DIV
><DIV
CLASS="variablelist"
><DL
><DT
>admin</DT
><DD
><P
> 
             Administrator can create new teams and delete existing teams.
            </P
></DD
><DT
>scrums_editteams</DT
><DD
><P
> 
             Indicates user can edit team information including component responsibilities and team members.<br> 
                User can also edit backlog, create a new sprint and edit content and information of an existing sprint.
            </P
></DD

><DT
>team owner</DT
><DD
><P
> 
             This user role is set in team information and it is set into each team separately. 
                Owner of one team is not granted any rights into any other team.
                Indicates that user can edit backlog and create and edit sprint.
            </P
></DD

><DT
>scrum master</DT
><DD
><P
> 
                This user role is set in team information and it is set into each team separately. 
                Scrum master of one team is not granted any rights into any other team.
             Indicates that user can create a new sprint and edit existing sprint.
            </P
></DD

><DT
>team member</DT
><DD
><P
> 
             This user role is set in team information and it is set into each team separately. 
                Team member of one team is not granted any rights into any other team.
             Indicates that user can edit content of existing sprint.
            </P
></DD

><DT
>release manager</DT
><DD
><P
> 
             Indicates that user can create a new release and edit an existing release.
                User can also sort item order in release and add and remove flag types from release. 
            </P
></DD

></DL
></DIV>

All users are allowed to view team list and individual teams, view daily team planning and view releases.
<DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
>

<TR>
<TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="#scrumsextension"
ACCESSKEY="H"
>Up</A>
</TD>
</TR
><TR
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="docs/en/html/using.html"
ACCESSKEY="U"
>Bugzilla User's guide</A
></TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
