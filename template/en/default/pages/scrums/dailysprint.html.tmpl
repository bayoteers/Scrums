[%#
  # The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Scrums Bugzilla Extension.
  #
  # The Initial Developer of the Original Code is "Nokia Corporation"
  # Portions created by the Initial Developer are Copyright (C) 2011 the
  # Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #  Eero Heino <eero.heino@nokia.com>
  #%]
[% PROCESS global/header.html.tmpl
    title = "Team New Bugs" 
    style_urls = ['skins/standard/admin.css']
%]

[% PROCESS global/lists.html.tmpl %]

<script type="text/javascript">
  var unordered_bugs = null;

  var unordered_bugs_search_url = "buglist.cgi?query_format=advanced&";
  unordered_bugs_search_url += "columnlist=bug_severity%2Cpriority%2Cassigned_to%2Cbug_status%2Cshort_desc%2Cestimated_time%2C";
  unordered_bugs_search_url += "actual_time%2Cremaining_time%2Cscrums_team_order%2Cscrums_blocked%2Csprint_name&";
  unordered_bugs_search_url += "bug_severity=blocker&bug_severity=critical&bug_severity=major&bug_severity=normal&bug_severity=minor&bug_severity=risk&";
  unordered_bugs_search_url += "[% FOREACH status IN bug_status_open %]bug_status=[% status %]&[% END %]";
  unordered_bugs_search_url += "[% FOREACH class IN classifications %]classification=[% class %]&[% END %]";
  unordered_bugs_search_url += "[% FOREACH product IN products %]product=[% product %]&[% END %]";
  unordered_bugs_search_url += "[% FOREACH component IN components %]component=[% component %]&[% END %]";

  unordered_bugs = new listObject("sortable2", "headers2", '-1', 'Unprioritized bugs', null, unordered_bugs_search_url);
  unordered_bugs.show_columns.push('creation_date');
  unordered_bugs.show_columns.splice( $.inArray('order', unordered_bugs.show_columns), 1 );

  var backlog = new listObject("sortable", "headers", "[% backlog.sprint.id() %]", 'Backlog');

  // *** Global variables ***
  schema = 'team';
  object_id = [% team.id %];

  var all_lists = [];
  var bug_positions = [];

  function save_all()
  {
      var saved_lists = [];
      saved_lists.push(all_lists[0]);
      saved_lists.push(backlog);	// Idle list
      saved_lists.push(all_lists[1]);
      do_save(saved_lists);
  }

  [% PROCESS 'global/lists_unordered.js.tmpl' unprioritised_items = unprioritised_bugs %]
  // data from backend

  [% PROCESS 'global/lists_backlog.js.tmpl' %]

  var sprint_list_data = 
  {[% FOREACH team_sprint IN team_sprints_array %]
  
      [% team_sprint.sprint.id() %]: ["[% team_sprint.sprint.name() %]",
                                      [[% FOREACH bug IN team_sprint.bugs %]
                                       [% bugid = bug.0 %]
                                       [% PROCESS 'global/lists_bug.js.tmpl' bug = bug bugid = bugid %]
                                      [% END %]],
                                      "[% team_sprint.sprint.status() %]",
                                      "[% team_sprint.sprint.nominal_schedule() %]",
                                      "[% team_sprint.sprint.description() | replace( '"', '\"' ) %]"],
  [% END %]};

  var sprint_lists = [];

  $(document).ready(function() {
    var html = '';

    for (id in sprint_list_data)
    {
      var sprint_search_url = search_link_sprint_items(id);
      var list = new listObject('sprint_list_' + id, 'sprint_header_' + id, id, sprint_list_data[id][0] /* name */, null, sprint_search_url);
      // last argument is the bug list
      // extra stuff for sprint
      list._status = sprint_list_data[id][2]
      list.nominal_schedule = sprint_list_data[id][3]
      list.description = sprint_list_data[id][4]

      html = parseTemplate($('#ListTmpl').html(), { list: list, extra_middle: '' });
      $(html).appendTo($('#sprints'));
      bind_items_to_list(list, sprint_list_data[id][1]);
      update_lists(list, 0);
      sprint_lists.push(list);
    }

    //$('#sprints').html(html);
    $('#unordered').html(parseTemplate($('#ListTmpl').html(), { list: unordered_bugs, extra_middle: '' }));
    bind_items_to_list(unordered_bugs, unordered_list_data);
    update_lists(unordered_bugs, 0);
    all_lists = $.extend(true, [], sprint_lists);
    all_lists.push(unordered_bugs);
    bind_sortable_lists(all_lists);

    bind_items_to_list(backlog, backlog_bugs);
    // Only *after* everything else has been done backlog is pushed to 'sprint_lists'
    // Because backlog is in 'sprint_lists', it is saved (it is never changed)
    // Nothing else is done with backlog item.
  });
</script>

<div class="bz_title_container">
  '[% team.name %]' New Bugs
</div>

[% PROCESS pages/scrums/navi.html.tmpl %]

<table>
  <tr>
    <td valign="top" id="sprints" width="50%">
    </td>
    <td valign="top" id="unordered" width="50%">
    </td>
  </tr>
  <tr>
    <td colspan="2" align="right">
      <input type="button" class="toggle_scroll" value="Toggle Scroll Bars" onClick="toggle_scroll();" />
    </td>
  </tr>
</table>

<p>
  <a href="page.cgi?id=scrums/createteam.html&teamid=[% team.id %]">Manage Team</a>
</p>

[% PROCESS global/footer.html.tmpl %]
